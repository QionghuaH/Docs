To install all package that caffe needed

1. openblas
  $: tar -zxvf OpenBLAS-0.2.19.tar.gz 
  $: cd OpenBLAS-0.2.19/ && make
  $: make install PREFIX=../../openblas
2. hdf5
  $: tar -xvf hdf5-1.8.18.tar
  $: cd hdf5-1.8.18
  $: ./configure --prefix=absolute_path
  $: make -j8
  $: make install -j8
3. glog
  $: tar -zxvf  glog-0.3.3.tar.gz
  $: cd glog-0.3.3
  $: ./configure --prefix=/absolute_path/to/
  $: make && make install -j8
  $:
4. gflags
  $: unzip -q gflags-master.zip
  $: cd gflags-master/
  $: mkdir build && cd build
  $: export CXXFLAGS="-fPIC" && cmake -D CMAKE_INSTALL_PREFIX=/DATACENTER1/qionghua.he/local/gflags/ .. && make VERBOSE=1
  $: make && make install
  $:

5. protobuf
  $: tar -zxvf protobuf-2.6.1.tar.gz    
  $: cd protobuf-2.6.1
  $: ./configure --prefix=/path/to/protobuf
  $: make 
  $: make check 
  $: make install
6. leveldb (snappy(安装automake(m4)))
  $: /*   (GNU M4)tar -xf m4-1.4.18.tar.xz && cd m4-1.4.18
  $: ./configure -prefix=/DATACENTER2/qionghua.he/local/m4
  $: make && make install   */
  $：
  $: tar -zxvf snappy.tar.gz 
  $: cd snappy
  $: sh autogen.sh
  $: ./configure --prefix=/path/to/snappy
  $: make && make install (May be wrong with README, Just cp README.md README)
  $: unzip leveldb-master.zip 
  $: cd leveldb-master/
  $: make
  $: cp --preserve=links libleveldb.* /home/you/usr/lib   //the path you want to install
  $: cp -r include/leveldb /home/you/usr/include/
7. lmdb
  $: git clone https://github.com/LMDB/lmdb
  $: cd lmdb/libraries/liblmdb
  $: make && make install prefix=/../../
8. boost
  $: tar -xvf boost_1_63_0.tar
  $: cd boost_1_63_0
  $: ./bootstrap.sh --libdir=/home/you/usr/lib --includedir=/home/you/usr/include
  $: vi project-config.jam # edit python path if you have a compiled one
  $: ./b2 -j8                                                            
  $: ./b2 install -j8
9. Opencv  
  $: unzip opencv-2.4.13.zip                                          
  $: cd opencv-2.4.13
  $: mkdir build && cd build 
  $: cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/home/you/usr ..
  $: make -j8
  $: make install -j8

10. nccl
    $: git clone https://github.com/NVIDIA/nccl.git
    $:cd  nccl
    $: make CUDA_HOME=/usr/local/cuda test #make CUDA_HOME=<cuda install path> test
    $: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./build/lib
    $: ./build/test/single/all_reduce_test 10000000
    $:  make PREFIX=../../local/libs/nccl install  #make PREFIX=<install dir> install
    $: add <instal dir>/lib to your LD_LIBRARY_PATH
    
    
    $: may enconter such problem:'ls: cannot access '/usr/lib64/libcudart.so.*': No such file or directory'
    $: locate libcudart.so
    $: vi Makefile, change the CUDA_LIB ?= $(CUDA_HOME)/lib64 to the libcudart.so's dir

11. caffe
  $: vi Makefile.config 
        BLAS := atlas                           
        BLAS_INCLUDE := /path/to/your/atlas/include                                  
        BLAS_LIB := /path/to/your/atlas/lib  
        
        PYTHON_INCLUDE := /path/to/your/python/include/python2.7 \
                  /path/to/your/python/lib/python2.7/site-packages/numpy/core/include
        PYTHON_LIB := /home/qchen/Python27/lib
        
        INCLUDE_DIRS := $(PYTHON_INCLUDE) $(QC_CUSTOM_INCLUDE) /usr/local/include        
        LIBRARY_DIRS := $(PYTHON_LIB) $(QC_CUSTOM_LIB) /usr/local/lib /usr/lib 
        
        uncomment USE_CUDNN := 1 ，use cuDNN to speed up；
        uncomment USE_NCCL := 1， use multiGPU on caffe
        
    $: make all
    $: make test
    $: make runtest
 13. Modify the ~/.bashrc
    $: add export LD_LIBRARY_PATH ="all install package libs"
    $：add export PATH="$PATH:"
          
12.pycaffe
   make pycaffe -j8   
   export PYTHONPATH=$PYTHONPATH:../caffe-root/python/
   
13.matcaffe
   make matcaffe -j8
   make mattest -j8 
   在Caffe根目录启动Matlab之后需要增加路径：`ddpath ./matlab`  (savepath)
   
14. Problem & solution
    PRO1: cannot find #include "caffe/proto/caffe.pb.h
    SOL1: $: generate caffe.pb.h manually using protoc as follows
          $: In the directory you installed Caffe to
          $: protoc src/caffe/proto/caffe.proto --cpp_out=.  [若提示没有protoc，则去protobuf安装路径bin下找]
          $: mkdir include/caffe/proto
          $: mv src/caffe/proto/caffe.pb.h include/caffe/proto
   PRO2:Invalid MEX-file '/home/qionghua.he/projects/caffe-face/matlab/+caffe/private/caffe_.mexa64':
       /DATACENTER3/qionghua.he/local/matlab/bin/glnxa64/../../sys/os/glnxa64/libstdc++.so.6: version `GLIBCXX_3.4.21' not found                (required by/home/qionghua.he/projects/caffe-face/matlab/+caffe/private/caffe_.mexa64).
   SOL2:
       >>locate libstdc++.so.6 
       >>strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBC 
       >>ln -sf /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.20 /opt/MATLAB/R2012a/sys/os/glnxa64/libstdc++.so.6 

   
   

    
   
